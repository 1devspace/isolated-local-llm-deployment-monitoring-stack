"use strict";(self.webpackChunkdocs_temp=self.webpackChunkdocs_temp||[]).push([[884],{1867:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"security","title":"Security & Network Isolation","description":"This guide explains the security features and network isolation mechanisms that make this LLM stack suitable for sensitive environments, including air-gapped deployments.","source":"@site/docs/security.md","sourceDirName":".","slug":"/security","permalink":"/Isolated-Local-LLM-Deployment-Monitoring-Stack/docs/security","draft":false,"unlisted":false,"editUrl":"https://github.com/mohamedaminehamdi/Isolated-Local-LLM-Deployment-Monitoring-Stack/tree/main/docs/docs/security.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Monitoring Stack Setup","permalink":"/Isolated-Local-LLM-Deployment-Monitoring-Stack/docs/monitoring"},"next":{"title":"Troubleshooting Guide","permalink":"/Isolated-Local-LLM-Deployment-Monitoring-Stack/docs/troubleshooting"}}');var r=s(4848),t=s(8453);const a={sidebar_position:4},o="Security & Network Isolation",l={},c=[{value:"\ud83d\udd12 Security Overview",id:"-security-overview",level:2},{value:"Key Security Features",id:"key-security-features",level:3},{value:"\ud83c\udf10 Network Architecture",id:"-network-architecture",level:2},{value:"Isolated Networks",id:"isolated-networks",level:3},{value:"Network Topology",id:"network-topology",level:3},{value:"\ud83d\udee1\ufe0f Security Mechanisms",id:"\ufe0f-security-mechanisms",level:2},{value:"1. Localhost-only Port Binding",id:"1-localhost-only-port-binding",level:3},{value:"2. Container Network Isolation",id:"2-container-network-isolation",level:3},{value:"3. Process Isolation",id:"3-process-isolation",level:3},{value:"\ud83d\udd10 Access Control",id:"-access-control",level:2},{value:"Default Authentication",id:"default-authentication",level:3},{value:"Enhanced Security Setup",id:"enhanced-security-setup",level:3},{value:"\ud83c\udff0 Air-gapped Deployment",id:"-air-gapped-deployment",level:2},{value:"Prerequisites for Offline Installation",id:"prerequisites-for-offline-installation",level:3},{value:"Pre-download Models",id:"pre-download-models",level:3},{value:"\ud83d\udd0d Security Monitoring",id:"-security-monitoring",level:2},{value:"Log Analysis",id:"log-analysis",level:3},{value:"Prometheus Security Metrics",id:"prometheus-security-metrics",level:3},{value:"Grafana Security Dashboard",id:"grafana-security-dashboard",level:3},{value:"\ud83d\udea8 Security Best Practices",id:"-security-best-practices",level:2},{value:"Container Security",id:"container-security",level:3},{value:"Host Security",id:"host-security",level:3},{value:"Data Security",id:"data-security",level:3},{value:"\ud83d\udd2c Security Verification",id:"-security-verification",level:2},{value:"Network Security Audit",id:"network-security-audit",level:3},{value:"Run Security Audit",id:"run-security-audit",level:3},{value:"\ud83d\udccb Security Checklist",id:"-security-checklist",level:2},{value:"Pre-deployment",id:"pre-deployment",level:3},{value:"Post-deployment",id:"post-deployment",level:3},{value:"Air-gapped Environments",id:"air-gapped-environments",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"security--network-isolation",children:"Security & Network Isolation"})}),"\n",(0,r.jsx)(n.p,{children:"This guide explains the security features and network isolation mechanisms that make this LLM stack suitable for sensitive environments, including air-gapped deployments."}),"\n",(0,r.jsx)(n.h2,{id:"-security-overview",children:"\ud83d\udd12 Security Overview"}),"\n",(0,r.jsx)(n.h3,{id:"key-security-features",children:"Key Security Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Network Isolation"}),": Services run in isolated Docker networks"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Localhost-only Binding"}),": No external network exposure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Air-gapped Compatible"}),": No mandatory internet dependencies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Container Isolation"}),": Process and filesystem isolation via Docker"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Persistent Data Encryption"}),": Optional volume encryption support"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-network-architecture",children:"\ud83c\udf10 Network Architecture"}),"\n",(0,r.jsx)(n.h3,{id:"isolated-networks",children:"Isolated Networks"}),"\n",(0,r.jsx)(n.p,{children:"The stack uses two separate Docker networks to prevent unauthorized access:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# LLM Network (ollama-net)\ndocker network create ollama-net\n\n# Monitoring Network (monitor-net)  \ndocker network create monitor-net\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-topology",children:"Network Topology"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-mermaid",children:'graph TB\n    subgraph "Host System"\n        subgraph "ollama-net"\n            A[Ollama<br/>Port: 11434 internal]\n            B[Open WebUI<br/>Port: 8080 internal]\n            A <--\x3e B\n        end\n        \n        subgraph "monitor-net"\n            C[Prometheus<br/>Port: 9090 internal]\n            D[Grafana<br/>Port: 3000 internal]\n            E[cAdvisor<br/>Port: 8080 internal]\n            F[Node Exporter<br/>Port: 9100 internal]\n            C <--\x3e D\n            C <--\x3e E\n            C <--\x3e F\n        end\n        \n        subgraph "Host Ports (Localhost Only)"\n            G[127.0.0.1:11444 \u2192 Ollama]\n            H[127.0.0.1:8081 \u2192 WebUI]\n            I[127.0.0.1:9090 \u2192 Prometheus]\n            J[127.0.0.1:4001 \u2192 Grafana]\n        end\n    end\n    \n    K[External Network] -.->|Blocked| G\n    K -.->|Blocked| H\n    K -.->|Blocked| I\n    K -.->|Blocked| J\n'})}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-security-mechanisms",children:"\ud83d\udee1\ufe0f Security Mechanisms"}),"\n",(0,r.jsx)(n.h3,{id:"1-localhost-only-port-binding",children:"1. Localhost-only Port Binding"}),"\n",(0,r.jsxs)(n.p,{children:["All services are bound only to ",(0,r.jsx)(n.code,{children:"127.0.0.1"}),", preventing external access:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# \u2705 Secure: Localhost only\n-p 127.0.0.1:11444:11434\n\n# \u274c Insecure: All interfaces\n-p 11444:11434\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Verification:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Check port bindings\nnetstat -tlnp | grep -E "(11444|8081|9090|4001)"\n\n# Expected output shows 127.0.0.1 only:\n# tcp 0 0 127.0.0.1:11444 0.0.0.0:* LISTEN\n'})}),"\n",(0,r.jsx)(n.h3,{id:"2-container-network-isolation",children:"2. Container Network Isolation"}),"\n",(0,r.jsx)(n.p,{children:"Services communicate through internal Docker networks, not the host:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Internal communication (secure)\nOLLAMA_BASE_URL=http://ollama:11434\n\n# External communication (avoided)\n# OLLAMA_BASE_URL=http://localhost:11444\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-process-isolation",children:"3. Process Isolation"}),"\n",(0,r.jsx)(n.p,{children:"Each service runs in its own container with limited privileges:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run containers with security options\ndocker run --security-opt no-new-privileges:true \\\n           --read-only \\\n           --tmpfs /tmp \\\n           your-image\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-access-control",children:"\ud83d\udd10 Access Control"}),"\n",(0,r.jsx)(n.h3,{id:"default-authentication",children:"Default Authentication"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Open WebUI:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Requires user account creation on first access"}),"\n",(0,r.jsx)(n.li,{children:"Supports multiple user accounts"}),"\n",(0,r.jsx)(n.li,{children:"Chat history isolated per user"}),"\n",(0,r.jsx)(n.li,{children:"Admin controls for user management"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Grafana:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Default: ",(0,r.jsx)(n.code,{children:"admin"})," / ",(0,r.jsx)(n.code,{children:"admin"})]}),"\n",(0,r.jsx)(n.li,{children:"Change password on first login"}),"\n",(0,r.jsx)(n.li,{children:"Role-based access control available"}),"\n",(0,r.jsx)(n.li,{children:"Dashboard sharing controls"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Prometheus:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"No authentication by default"}),"\n",(0,r.jsx)(n.li,{children:"Network isolation provides security"}),"\n",(0,r.jsx)(n.li,{children:"Can add authentication via reverse proxy"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"enhanced-security-setup",children:"Enhanced Security Setup"}),"\n",(0,r.jsx)(n.p,{children:"For production or sensitive environments:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Create dedicated user for containers\nsudo useradd -r -s /bin/false llm-user\n\n# 2. Run containers with specific user\ndocker run -d \\\n  --name ollama \\\n  --user $(id -u llm-user):$(id -g llm-user) \\\n  --network ollama-net \\\n  -p 127.0.0.1:11444:11434 \\\n  ollama/ollama\n\n# 3. Set proper file permissions\nsudo chown -R llm-user:llm-user /var/lib/docker/volumes/ollama-data\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-air-gapped-deployment",children:"\ud83c\udff0 Air-gapped Deployment"}),"\n",(0,r.jsx)(n.h3,{id:"prerequisites-for-offline-installation",children:"Prerequisites for Offline Installation"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Download Docker images"})," on internet-connected machine:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Pull all required images\ndocker pull ollama/ollama:latest\ndocker pull ghcr.io/open-webui/open-webui:main\ndocker pull prom/prometheus:latest\ndocker pull grafana/grafana:latest\ndocker pull gcr.io/cadvisor/cadvisor:latest\ndocker pull prom/node-exporter:latest\n\n# Save images to files\ndocker save -o ollama.tar ollama/ollama:latest\ndocker save -o webui.tar ghcr.io/open-webui/open-webui:main\ndocker save -o prometheus.tar prom/prometheus:latest\ndocker save -o grafana.tar grafana/grafana:latest\ndocker save -o cadvisor.tar gcr.io/cadvisor/cadvisor:latest\ndocker save -o node-exporter.tar prom/node-exporter:latest\n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Transfer to air-gapped system"})," via secure media"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Load images"})," on air-gapped system:"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Load all images\ndocker load -i ollama.tar\ndocker load -i webui.tar\ndocker load -i prometheus.tar\ndocker load -i grafana.tar\ndocker load -i cadvisor.tar\ndocker load -i node-exporter.tar\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pre-download-models",children:"Pre-download Models"}),"\n",(0,r.jsx)(n.p,{children:"Download models on internet-connected system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run Ollama temporarily\ndocker run -d --name ollama-temp -v ollama-models:/root/.ollama ollama/ollama\n\n# Download models\ndocker exec ollama-temp ollama pull llama3\ndocker exec ollama-temp ollama pull codellama\ndocker exec ollama-temp ollama pull mistral\n\n# Stop and backup model data\ndocker stop ollama-temp\ndocker run --rm -v ollama-models:/data -v $(pwd):/backup alpine tar czf /backup/models.tar.gz -C /data .\n\n# Transfer models.tar.gz to air-gapped system\n"})}),"\n",(0,r.jsx)(n.p,{children:"Restore on air-gapped system:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create volume and restore models\ndocker volume create ollama-data\ndocker run --rm -v ollama-data:/data -v $(pwd):/backup alpine tar xzf /backup/models.tar.gz -C /data\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-security-monitoring",children:"\ud83d\udd0d Security Monitoring"}),"\n",(0,r.jsx)(n.h3,{id:"log-analysis",children:"Log Analysis"}),"\n",(0,r.jsx)(n.p,{children:"Monitor security-relevant events:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Container security events\ndocker logs ollama 2>&1 | grep -i "error\\|fail\\|unauthorized"\n\n# System security logs\nsudo tail -f /var/log/syslog | grep -i docker\n\n# Network connection monitoring\nsudo netstat -tulnp | grep -E "(11444|8081|9090|4001)"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"prometheus-security-metrics",children:"Prometheus Security Metrics"}),"\n",(0,r.jsx)(n.p,{children:"Add security monitoring queries:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-promql",children:'# Failed authentication attempts (if auth enabled)\nincrease(http_requests_total{code="401"}[5m])\n\n# Unusual network activity\nrate(container_network_transmit_bytes_total[5m]) > 1000000\n\n# Container restarts (potential security issues)\nincrease(container_start_time_seconds[5m]) > 0\n'})}),"\n",(0,r.jsx)(n.h3,{id:"grafana-security-dashboard",children:"Grafana Security Dashboard"}),"\n",(0,r.jsx)(n.p,{children:"Create alerts for security events:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "alert": {\n    "name": "Unauthorized Access Attempt",\n    "conditions": [\n      {\n        "query": {\n          "expr": "increase(http_requests_total{code=\\"401\\"}[5m]) > 5"\n        }\n      }\n    ],\n    "executionErrorState": "alerting",\n    "noDataState": "no_data",\n    "for": "1m"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-security-best-practices",children:"\ud83d\udea8 Security Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"container-security",children:"Container Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# 1. Use specific image tags (not \'latest\')\ndocker run -d ollama/ollama:v0.1.32\n\n# 2. Limit container resources\ndocker run -d \\\n  --memory="4g" \\\n  --cpus="2.0" \\\n  --pids-limit=100 \\\n  ollama/ollama\n\n# 3. Run with read-only root filesystem where possible\ndocker run -d \\\n  --read-only \\\n  --tmpfs /tmp \\\n  --tmpfs /var/run \\\n  your-image\n\n# 4. Drop unnecessary capabilities\ndocker run -d \\\n  --cap-drop=ALL \\\n  --cap-add=CHOWN \\\n  --cap-add=SETUID \\\n  --cap-add=SETGID \\\n  your-image\n'})}),"\n",(0,r.jsx)(n.h3,{id:"host-security",children:"Host Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Keep Docker updated\nsudo apt update && sudo apt upgrade docker.io\n\n# 2. Configure Docker daemon security\nsudo vim /etc/docker/daemon.json\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="/etc/docker/daemon.json"',children:'{\n  "live-restore": true,\n  "userland-proxy": false,\n  "no-new-privileges": true,\n  "log-driver": "json-file",\n  "log-opts": {\n    "max-size": "10m",\n    "max-file": "3"\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"data-security",children:"Data Security"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# 1. Encrypt Docker volumes (Linux with LUKS)\nsudo cryptsetup luksFormat /dev/sdb1\nsudo cryptsetup luksOpen /dev/sdb1 docker-encrypted\nsudo mkfs.ext4 /dev/mapper/docker-encrypted\nsudo mount /dev/mapper/docker-encrypted /var/lib/docker\n\n# 2. Backup encryption\ntar czf - /var/lib/docker/volumes/ollama-data | gpg --symmetric --cipher-algo AES256 > ollama-backup.tar.gz.gpg\n\n# 3. Secure file permissions\nsudo chmod 700 /var/lib/docker/volumes/ollama-data\nsudo chown root:root /var/lib/docker/volumes/ollama-data\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-security-verification",children:"\ud83d\udd2c Security Verification"}),"\n",(0,r.jsx)(n.h3,{id:"network-security-audit",children:"Network Security Audit"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# security-audit.sh\n\necho "=== Docker Network Security Audit ==="\n\n# Check port bindings\necho "1. Checking port bindings..."\nnetstat -tlnp | grep -E "(11444|8081|9090|4001)" | while read line; do\n    if echo "$line" | grep -q "127.0.0.1"; then\n        echo "\u2705 $line (localhost only)"\n    else\n        echo "\u274c $line (external access possible!)"\n    fi\ndone\n\n# Check network isolation\necho -e "\\n2. Checking network isolation..."\ndocker network ls | grep -E "(ollama-net|monitor-net)"\n\n# Check container security\necho -e "\\n3. Checking container security..."\ndocker ps --format "table {{.Names}}\\t{{.Ports}}" | grep -E "(ollama|webui|prometheus|grafana)"\n\n# Check for privileged containers\necho -e "\\n4. Checking for privileged containers..."\ndocker ps --filter "label=privileged=true" --format "{{.Names}}" | while read container; do\n    if [ -n "$container" ]; then\n        echo "\u26a0\ufe0f  Privileged container found: $container"\n    fi\ndone\n\necho -e "\\n=== Audit Complete ==="\n'})}),"\n",(0,r.jsx)(n.h3,{id:"run-security-audit",children:"Run Security Audit"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"chmod +x security-audit.sh\n./security-audit.sh\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-security-checklist",children:"\ud83d\udccb Security Checklist"}),"\n",(0,r.jsx)(n.h3,{id:"pre-deployment",children:"Pre-deployment"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Network isolation"}),": Created separate Docker networks"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Port binding"}),": All services bound to localhost only"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Image verification"}),": Using official images from trusted sources"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Resource limits"}),": Set memory and CPU limits for containers"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"User permissions"}),": Running containers with non-root users where possible"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"post-deployment",children:"Post-deployment"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Access testing"}),": Verified external access is blocked"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Authentication"}),": Changed default passwords"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Monitoring"}),": Set up security monitoring and alerts"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Backups"}),": Implemented secure backup procedures"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Updates"}),": Planned for regular security updates"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"air-gapped-environments",children:"Air-gapped Environments"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Image preparation"}),": Pre-downloaded all required images"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Model preparation"}),": Pre-downloaded required models"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Dependency isolation"}),": Verified no internet dependencies"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Transfer security"}),": Used secure methods for data transfer"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Verification"}),": Confirmed functionality without internet access"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.admonition,{title:"Security Notice",type:"warning",children:(0,r.jsx)(n.p,{children:"While this stack provides strong isolation and security features, always conduct your own security assessment based on your specific requirements and threat model. Consider additional security measures for highly sensitive environments."})}),"\n",(0,r.jsxs)(n.p,{children:["Next: ",(0,r.jsx)(n.a,{href:"./troubleshooting",children:"Troubleshooting \u2192"})]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var i=s(6540);const r={},t=i.createContext(r);function a(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);