"use strict";(self.webpackChunkdocs_temp=self.webpackChunkdocs_temp||[]).push([[13],{7309:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"troubleshooting","title":"Troubleshooting Guide","description":"This guide covers common issues and solutions for the Isolated Local LLM Deployment & Monitoring Stack.","source":"@site/docs/troubleshooting.md","sourceDirName":".","slug":"/troubleshooting","permalink":"/Isolated-Local-LLM-Deployment-Monitoring-Stack/docs/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/mohamedaminehamdi/Isolated-Local-LLM-Deployment-Monitoring-Stack/tree/main/docs/docs/troubleshooting.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Security & Network Isolation","permalink":"/Isolated-Local-LLM-Deployment-Monitoring-Stack/docs/security"}}');var o=s(4848),l=s(8453);const a={sidebar_position:5},i="Troubleshooting Guide",t={},c=[{value:"\ud83d\udea8 Quick Diagnostics",id:"-quick-diagnostics",level:2},{value:"Health Check Script",id:"health-check-script",level:3},{value:"\ud83d\udd04 LLM Stack Issues",id:"-llm-stack-issues",level:2},{value:"Ollama Problems",id:"ollama-problems",level:3},{value:"<strong>Issue</strong>: Ollama container won&#39;t start",id:"issue-ollama-container-wont-start",level:4},{value:"<strong>Issue</strong>: Model download fails",id:"issue-model-download-fails",level:4},{value:"<strong>Issue</strong>: Ollama API not responding",id:"issue-ollama-api-not-responding",level:4},{value:"Open WebUI Problems",id:"open-webui-problems",level:3},{value:"<strong>Issue</strong>: WebUI can&#39;t connect to Ollama",id:"issue-webui-cant-connect-to-ollama",level:4},{value:"<strong>Issue</strong>: WebUI performance is slow",id:"issue-webui-performance-is-slow",level:4},{value:"\ud83d\udcca Monitoring Stack Issues",id:"-monitoring-stack-issues",level:2},{value:"Prometheus Problems",id:"prometheus-problems",level:3},{value:"<strong>Issue</strong>: Prometheus can&#39;t scrape targets",id:"issue-prometheus-cant-scrape-targets",level:4},{value:"<strong>Issue</strong>: Prometheus data not persisting",id:"issue-prometheus-data-not-persisting",level:4},{value:"Grafana Problems",id:"grafana-problems",level:3},{value:"<strong>Issue</strong>: Can&#39;t login to Grafana",id:"issue-cant-login-to-grafana",level:4},{value:"<strong>Issue</strong>: Dashboards show no data",id:"issue-dashboards-show-no-data",level:4},{value:"\ud83d\udda5\ufe0f System Issues",id:"\ufe0f-system-issues",level:2},{value:"Docker Problems",id:"docker-problems",level:3},{value:"<strong>Issue</strong>: Docker out of disk space",id:"issue-docker-out-of-disk-space",level:4},{value:"<strong>Issue</strong>: Permission denied errors",id:"issue-permission-denied-errors",level:4},{value:"Performance Issues",id:"performance-issues",level:3},{value:"<strong>Issue</strong>: High CPU/Memory usage",id:"issue-high-cpumemory-usage",level:4},{value:"<strong>Issue</strong>: Network connectivity slow",id:"issue-network-connectivity-slow",level:4},{value:"\ud83d\udd27 Recovery Procedures",id:"-recovery-procedures",level:2},{value:"Complete Stack Reset",id:"complete-stack-reset",level:3},{value:"Backup and Restore",id:"backup-and-restore",level:3},{value:"\ud83d\udcde Getting Help",id:"-getting-help",level:2},{value:"Log Collection",id:"log-collection",level:3},{value:"Community Support",id:"community-support",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"troubleshooting-guide",children:"Troubleshooting Guide"})}),"\n",(0,o.jsx)(n.p,{children:"This guide covers common issues and solutions for the Isolated Local LLM Deployment & Monitoring Stack."}),"\n",(0,o.jsx)(n.h2,{id:"-quick-diagnostics",children:"\ud83d\udea8 Quick Diagnostics"}),"\n",(0,o.jsx)(n.h3,{id:"health-check-script",children:"Health Check Script"}),"\n",(0,o.jsx)(n.p,{children:"Run this script to quickly diagnose common issues:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# health-check.sh\n\necho "=== LLM Stack Health Check ==="\n\n# Check Docker daemon\nif ! docker info > /dev/null 2>&1; then\n    echo "\u274c Docker daemon not running"\n    echo "Solution: Start Docker Desktop or run \'sudo systemctl start docker\'"\n    exit 1\nelse\n    echo "\u2705 Docker daemon running"\nfi\n\n# Check networks\necho -e "\\n\ud83c\udf10 Networks:"\nfor network in ollama-net monitor-net; do\n    if docker network ls | grep -q "$network"; then\n        echo "\u2705 $network exists"\n    else\n        echo "\u274c $network missing - run: docker network create $network"\n    fi\ndone\n\n# Check containers\necho -e "\\n\ud83d\udce6 Containers:"\ncontainers=("ollama" "open-webui" "prometheus" "grafana" "cadvisor" "node-exporter")\nfor container in "${containers[@]}"; do\n    if docker ps | grep -q "$container"; then\n        echo "\u2705 $container running"\n    elif docker ps -a | grep -q "$container"; then\n        echo "\u26a0\ufe0f  $container exists but stopped"\n        echo "   Run: docker start $container"\n    else\n        echo "\u274c $container not found"\n    fi\ndone\n\n# Check ports\necho -e "\\n\ud83d\udd0c Ports:"\nports=("11444:Ollama" "8081:WebUI" "9090:Prometheus" "4001:Grafana")\nfor port_info in "${ports[@]}"; do\n    port=${port_info%:*}\n    service=${port_info#*:}\n    if netstat -tln | grep -q ":$port "; then\n        echo "\u2705 Port $port ($service) listening"\n    else\n        echo "\u274c Port $port ($service) not listening"\n    fi\ndone\n\necho -e "\\n=== Health Check Complete ==="\n'})}),"\n",(0,o.jsx)(n.h2,{id:"-llm-stack-issues",children:"\ud83d\udd04 LLM Stack Issues"}),"\n",(0,o.jsx)(n.h3,{id:"ollama-problems",children:"Ollama Problems"}),"\n",(0,o.jsxs)(n.h4,{id:"issue-ollama-container-wont-start",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Ollama container won't start"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker logs ollama\n# Error: failed to start server: bind: address already in use\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check port conflicts:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Find what's using port 11444\nlsof -i :11444\nsudo fuser -k 11444/tcp  # Kill process using port\n\n# Or use different port\ndocker run -d --name ollama -p 127.0.0.1:11445:11434 ollama/ollama\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check Docker socket permissions:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Fix Docker permissions (Linux)\nsudo usermod -aG docker $USER\nnewgrp docker\n\n# Restart Docker service\nsudo systemctl restart docker\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Clear container if corrupted:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stop ollama\ndocker rm ollama\ndocker run -d --name ollama --network ollama-net -p 127.0.0.1:11444:11434 -v ollama-data:/root/.ollama ollama/ollama\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-model-download-fails",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Model download fails"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama ollama pull llama3\n# Error: failed to download model\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check internet connectivity:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama ping -c 3 ollama.ai\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check disk space:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker system df\ndf -h /var/lib/docker\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Manual download with verbose output:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama ollama pull llama3 --verbose\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Clear corrupted download:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama rm -rf /root/.ollama/models/llama3\ndocker exec ollama ollama pull llama3\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-ollama-api-not-responding",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Ollama API not responding"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:11444/api/version\n# curl: (7) Failed to connect to localhost port 11444\n"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check container status:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker ps | grep ollama\ndocker logs ollama --tail 50\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Verify network configuration:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'docker inspect ollama | grep -A 10 "NetworkSettings"\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Test internal API:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama curl http://localhost:11434/api/version\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Restart with debug logging:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stop ollama\ndocker run -d --name ollama --network ollama-net -p 127.0.0.1:11444:11434 -v ollama-data:/root/.ollama -e OLLAMA_DEBUG=1 ollama/ollama\n"})}),"\n",(0,o.jsx)(n.h3,{id:"open-webui-problems",children:"Open WebUI Problems"}),"\n",(0,o.jsxs)(n.h4,{id:"issue-webui-cant-connect-to-ollama",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": WebUI can't connect to Ollama"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"WebUI loads but no models available"}),"\n",(0,o.jsx)(n.li,{children:'"Connection error" in WebUI'}),"\n",(0,o.jsx)(n.li,{children:"Models list is empty"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check network connectivity:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec open-webui ping ollama\ndocker exec open-webui curl http://ollama:11434/api/version\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Verify environment variables:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec open-webui env | grep OLLAMA\n# Should show: OLLAMA_BASE_URL=http://ollama:11434\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check both containers are on same network:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker inspect ollama | grep ollama-net\ndocker inspect open-webui | grep ollama-net\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Recreate WebUI with correct settings:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stop open-webui && docker rm open-webui\ndocker run -d \\\n  --name open-webui \\\n  --network ollama-net \\\n  -p 8081:8080 \\\n  -e OLLAMA_BASE_URL=http://ollama:11434 \\\n  -v open-webui:/app/backend/data \\\n  --restart always \\\n  ghcr.io/open-webui/open-webui:main\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-webui-performance-is-slow",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": WebUI performance is slow"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check system resources:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stats ollama open-webui\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Increase memory limits:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker update --memory=4g ollama\ndocker update --memory=2g open-webui\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Use smaller models:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama ollama pull llama3:7b  # Instead of 70b\n"})}),"\n",(0,o.jsx)(n.h2,{id:"-monitoring-stack-issues",children:"\ud83d\udcca Monitoring Stack Issues"}),"\n",(0,o.jsx)(n.h3,{id:"prometheus-problems",children:"Prometheus Problems"}),"\n",(0,o.jsxs)(n.h4,{id:"issue-prometheus-cant-scrape-targets",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Prometheus can't scrape targets"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:'Targets show as "DOWN" in Prometheus UI'}),"\n",(0,o.jsx)(n.li,{children:"No metrics data in Grafana"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check network connectivity:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec prometheus ping cadvisor\ndocker exec prometheus ping node-exporter\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Verify configuration:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec prometheus cat /etc/prometheus/prometheus.yml\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check target endpoints:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"curl http://localhost:8082/metrics  # cAdvisor\ncurl http://localhost:9100/metrics  # Node Exporter\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Fix network connections:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Connect monitoring containers to monitor-net\ndocker network connect monitor-net prometheus\ndocker network connect monitor-net cadvisor\ndocker network connect monitor-net node-exporter\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-prometheus-data-not-persisting",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Prometheus data not persisting"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check volume mount:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'docker inspect prometheus | grep -A 5 "Mounts"\n'})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Fix permissions:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec prometheus ls -la /prometheus\nsudo chown -R 65534:65534 /var/lib/docker/volumes/prometheus-data\n"})}),"\n",(0,o.jsx)(n.h3,{id:"grafana-problems",children:"Grafana Problems"}),"\n",(0,o.jsxs)(n.h4,{id:"issue-cant-login-to-grafana",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Can't login to Grafana"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Use default credentials:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Username: ",(0,o.jsx)(n.code,{children:"admin"})]}),"\n",(0,o.jsxs)(n.li,{children:["Password: ",(0,o.jsx)(n.code,{children:"admin"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Reset admin password:"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec grafana grafana-cli admin reset-admin-password newpassword\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check container logs:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker logs grafana --tail 50\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-dashboards-show-no-data",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Dashboards show no data"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Verify data source:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Go to Configuration \u2192 Data Sources"}),"\n",(0,o.jsxs)(n.li,{children:["Test Prometheus connection: ",(0,o.jsx)(n.code,{children:"http://prometheus:9090"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Check Prometheus connectivity:"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec grafana curl http://prometheus:9090/api/v1/label/__name__/values\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Import dashboard correctly:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Use dashboard ID: ",(0,o.jsx)(n.code,{children:"1860"})," for Node Exporter"]}),"\n",(0,o.jsx)(n.li,{children:"Select Prometheus data source during import"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"\ufe0f-system-issues",children:"\ud83d\udda5\ufe0f System Issues"}),"\n",(0,o.jsx)(n.h3,{id:"docker-problems",children:"Docker Problems"}),"\n",(0,o.jsxs)(n.h4,{id:"issue-docker-out-of-disk-space",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Docker out of disk space"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check disk usage:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker system df\ndf -h /var/lib/docker\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Clean up Docker:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Remove unused containers, networks, images\ndocker system prune -a -f\n\n# Remove unused volumes (CAREFUL!)\ndocker volume prune -f\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Move Docker root directory:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo systemctl stop docker\nsudo mv /var/lib/docker /new/path/docker\nsudo ln -s /new/path/docker /var/lib/docker\nsudo systemctl start docker\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-permission-denied-errors",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Permission denied errors"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Add user to docker group:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo usermod -aG docker $USER\nnewgrp docker\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Fix volume permissions:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"sudo chown -R $USER:$USER /var/lib/docker/volumes/\n"})}),"\n",(0,o.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,o.jsxs)(n.h4,{id:"issue-high-cpumemory-usage",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": High CPU/Memory usage"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Monitor resource usage:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker stats\nhtop\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Set resource limits:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker update --memory=4g --cpus=2 ollama\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"3",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Use smaller models:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Instead of llama3:70b, use:\ndocker exec ollama ollama pull llama3:7b\ndocker exec ollama ollama pull tinyllama  # Very small model\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"4",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Optimize Docker:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"# Limit container logs\ndocker run -d --log-opt max-size=10m --log-opt max-file=3 your-image\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"issue-network-connectivity-slow",children:[(0,o.jsx)(n.strong,{children:"Issue"}),": Network connectivity slow"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Solutions:"})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Check DNS resolution:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker exec ollama nslookup ollama.ai\n"})}),"\n",(0,o.jsxs)(n.ol,{start:"2",children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"Use local DNS:"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'# Add to /etc/docker/daemon.json\n{\n  "dns": ["8.8.8.8", "1.1.1.1"]\n}\n'})}),"\n",(0,o.jsx)(n.h2,{id:"-recovery-procedures",children:"\ud83d\udd27 Recovery Procedures"}),"\n",(0,o.jsx)(n.h3,{id:"complete-stack-reset",children:"Complete Stack Reset"}),"\n",(0,o.jsx)(n.p,{children:"If everything is broken, start fresh:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# reset-stack.sh\n\necho "\u26a0\ufe0f  This will remove all containers and data!"\nread -p "Continue? (y/N): " -n 1 -r\necho\nif [[ ! $REPLY =~ ^[Yy]$ ]]; then\n    exit 1\nfi\n\n# Stop all containers\ndocker stop ollama open-webui prometheus grafana cadvisor node-exporter\n\n# Remove containers\ndocker rm ollama open-webui prometheus grafana cadvisor node-exporter\n\n# Remove networks\ndocker network rm ollama-net monitor-net\n\n# Remove volumes (optional - this deletes all data!)\nread -p "Delete all data volumes? (y/N): " -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]; then\n    docker volume rm ollama-data open-webui prometheus-data grafana-data\nfi\n\necho "\u2705 Stack reset complete. Re-run deployment commands."\n'})}),"\n",(0,o.jsx)(n.h3,{id:"backup-and-restore",children:"Backup and Restore"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Create backup:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# backup-stack.sh\n\nmkdir -p backup/$(date +%Y%m%d_%H%M%S)\ncd backup/$(date +%Y%m%d_%H%M%S)\n\n# Export volumes\ndocker run --rm -v ollama-data:/data -v $(pwd):/backup alpine tar czf /backup/ollama-data.tar.gz -C /data .\ndocker run --rm -v open-webui:/data -v $(pwd):/backup alpine tar czf /backup/open-webui.tar.gz -C /data .\ndocker run --rm -v prometheus-data:/data -v $(pwd):/backup alpine tar czf /backup/prometheus-data.tar.gz -C /data .\ndocker run --rm -v grafana-data:/data -v $(pwd):/backup alpine tar czf /backup/grafana-data.tar.gz -C /data .\n\n# Export configurations\ndocker exec prometheus cat /etc/prometheus/prometheus.yml > prometheus.yml\ncp ../prometheus.yml .\n\necho "\u2705 Backup complete in backup/$(date +%Y%m%d_%H%M%S)/"\n'})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Restore backup:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# restore-stack.sh\n\nBACKUP_DIR=${1:-"backup/latest"}\n\nif [ ! -d "$BACKUP_DIR" ]; then\n    echo "\u274c Backup directory not found: $BACKUP_DIR"\n    exit 1\nfi\n\ncd "$BACKUP_DIR"\n\n# Restore volumes\ndocker volume create ollama-data\ndocker volume create open-webui\ndocker volume create prometheus-data\ndocker volume create grafana-data\n\ndocker run --rm -v ollama-data:/data -v $(pwd):/backup alpine tar xzf /backup/ollama-data.tar.gz -C /data\ndocker run --rm -v open-webui:/data -v $(pwd):/backup alpine tar xzf /backup/open-webui.tar.gz -C /data\ndocker run --rm -v prometheus-data:/data -v $(pwd):/backup alpine tar xzf /backup/prometheus-data.tar.gz -C /data\ndocker run --rm -v grafana-data:/data -v $(pwd):/backup alpine tar xzf /backup/grafana-data.tar.gz -C /data\n\necho "\u2705 Restore complete. Start your containers."\n'})}),"\n",(0,o.jsx)(n.h2,{id:"-getting-help",children:"\ud83d\udcde Getting Help"}),"\n",(0,o.jsx)(n.h3,{id:"log-collection",children:"Log Collection"}),"\n",(0,o.jsx)(n.p,{children:"Collect logs for troubleshooting:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# collect-logs.sh\n\nmkdir -p troubleshooting-$(date +%Y%m%d_%H%M%S)\ncd troubleshooting-$(date +%Y%m%d_%H%M%S)\n\n# System info\nuname -a > system-info.txt\ndocker version > docker-version.txt\ndocker info > docker-info.txt\n\n# Container logs\nfor container in ollama open-webui prometheus grafana cadvisor node-exporter; do\n    if docker ps -a | grep -q "$container"; then\n        docker logs "$container" > "${container}-logs.txt" 2>&1\n        docker inspect "$container" > "${container}-inspect.json"\n    fi\ndone\n\n# Network info\ndocker network ls > networks.txt\nnetstat -tlnp > ports.txt\n\necho "\u2705 Logs collected in troubleshooting-$(date +%Y%m%d_%H%M%S)/"\n'})}),"\n",(0,o.jsx)(n.h3,{id:"community-support",children:"Community Support"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GitHub Issues"}),": ",(0,o.jsx)(n.a,{href:"https://github.com/mohamedaminehamdi/Isolated-Local-LLM-Deployment-Monitoring-Stack/issues",children:"Report bugs and request features"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Discussions"}),": ",(0,o.jsx)(n.a,{href:"https://github.com/mohamedaminehamdi/Isolated-Local-LLM-Deployment-Monitoring-Stack/discussions",children:"Ask questions and share tips"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Documentation"}),": ",(0,o.jsx)(n.a,{href:"https://mohamedaminehamdi.github.io/Isolated-Local-LLM-Deployment-Monitoring-Stack/",children:"Check the latest docs"})]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"When reporting issues, please include:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"System information (OS, Docker version)"}),"\n",(0,o.jsx)(n.li,{children:"Complete error messages"}),"\n",(0,o.jsx)(n.li,{children:"Steps to reproduce"}),"\n",(0,o.jsx)(n.li,{children:"Container logs (use the log collection script above)"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.admonition,{title:"Debugging Tip",type:"tip",children:(0,o.jsx)(n.p,{children:"Start with the health check script at the top of this page. It catches 90% of common configuration issues and provides specific solutions for each problem found."})}),"\n",(0,o.jsxs)(n.p,{children:["Need more help? Check our ",(0,o.jsx)(n.a,{href:"https://github.com/mohamedaminehamdi/Isolated-Local-LLM-Deployment-Monitoring-Stack/issues",children:"GitHub Issues"})," or start a ",(0,o.jsx)(n.a,{href:"https://github.com/mohamedaminehamdi/Isolated-Local-LLM-Deployment-Monitoring-Stack/discussions",children:"Discussion"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var r=s(6540);const o={},l=r.createContext(o);function a(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);